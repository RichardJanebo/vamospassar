spring.application.name=respostabot

# Datasource configurado para H2 em mem√≥ria (teste)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:h2:mem:respostabot-test-db;DB_CLOSE_DELAY=-1}
spring.datasource.driverClassName=${SPRING_DATASOURCE_DRIVER:org.h2.Driver}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:sa}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}

spring.jpa.database-platform=${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.H2Dialect}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_FORMAT_SQL:true}

spring.h2.console.enabled=${SPRING_H2_CONSOLE_ENABLED:true}
spring.h2.console.path=${SPRING_H2_CONSOLE_PATH:/h2-console}

spring.elasticsearch.uris=${SPRING_ELASTICSEARCH_URIS:http://localhost:9200}
spring.elasticsearch.username=${SPRING_ELASTICSEARCH_USERNAME:elastic}
spring.elasticsearch.password=${SPRING_ELASTICSEARCH_PASSWORD:changeme}

server.servlet.context-path=${SERVER_CONTEXT_PATH:/}
server.error.include-stacktrace=${SERVER_ERROR_INCLUDE_STACKTRACE:NEVER}

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your-google-client-id}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your-google-client-secret}

# JWT
jwt.secret=${JWT_SECRET:adfaff}
jwt.issuer=${JWT_ISSUER:login-api}

# langchain4j OpenAI API Key with environment variable fallback
langchain4j.open-ai.chat-model.api-key=${OPENAI_API_KEY:test-api-key}
